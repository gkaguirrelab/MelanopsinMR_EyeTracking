function Melanopsin_EyeTracking
% Main driver for eyetracking during connectome sessions.

% aug, 4 2016 - GF : written and commented
%% Set defaults
% QuickTime flag

% Get user name
[~, tmpName] = system('whoami');
userName = strtrim(tmpName);
% get date
formatOut = 'mmddyy';
datestamp = datestr((datetime('now')),formatOut);
% Set Dropbox directory
dbDir = ['/Users/' userName '/Dropbox-Aguirre-Brainard-Lab/'];
disp(['Dropbox directory = ' dbDir]);
projectDir  = 'MELA_data';
runType = {...
    'Melanopsin_RodControlScotopic_EyeTracking' ...
    'Melanopsin_RodControlPhotopic_EyeTracking' ...
    };
%% Get the subject name
subjName = input('Subject name? e.g. HEROxxx1:\n','s');
if isempty(subjName)
    error('no subject name!');
end
%% Get the session date
sessDate = GetWithDefault('Session date? (Hit enter to use today''s date):\n', datestamp);
if isempty(sessDate)
    error('no session date!');
end
sprintf(['\nSession Names:\n' ...
    '\n1 - RodControl' ...
    '\n');
sessNum = input('Which session number?\n');
if isempty(sessNum)
    sessNum = 1;
end
% %% Set output directory
% outDir = fullfile(dbDir,'TOME_data',runType{sessNum},subjName,sessDate,'EyeTracking/');
% if ~exist(outDir,'dir')
%     mkdir(outDir);
% end
%%
switch sessNum
    case 1 %RodControl
        runNames = {...
            'Melanopsin_RodControlPhotopic_run01' ...
            'Melanopsin_RodControlPhotopic_run02' ...
            'Melanopsin_RodControlPhotopic_run03' ...
            'Melanopsin_RodControlPhotopic_run04' ...
            'Melanopsin_RodControlPhotopic_run05' ...
            'Melanopsin_RodControlPhotopic_run06' ...
            'Melanopsin_RodControlScotopic_run01' ...
            'Melanopsin_RodControlScotopic_run02' ...
            'Melanopsin_RodControlScotopic_run03' ...
            'Melanopsin_RodControlScotopic_run04' ...
            'Melanopsin_RodControlScotopic_run05' ...
            'Melanopsin_RodControlScotopic_run06' ...
            'ScaleCal' ...
            'Preview' ...
            };
        runSecs = {...
            350 ...
            350 ...
            350 ...
            350 ...
            350 ...
            350 ...
            350 ...
            350 ...
            350 ...
            350 ...
            350 ...
            350 ...
            15 ...
            };
        fprintf(['\nRun Names:\n' ...
            '\n1 - Melanopsin_RodControlPhotopic_run01' ...
            '\n2 - Melanopsin_RodControlPhotopic_run02' ...
            '\n3 - Melanopsin_RodControlPhotopic_run03' ...
            '\n4 - Melanopsin_RodControlPhotopic_run04' ...
            '\n5 - Melanopsin_RodControlPhotopic_run05' ...
            '\n6 - Melanopsin_RodControlPhotopic_run06' ...
            '\n7 - Melanopsin_RodControlScotopic_run01' ...
            '\n8 - Melanopsin_RodControlScotopic_run02' ...
            '\n9 - Melanopsin_RodControlScotopic_run03' ...
            '\n10 - Melanopsin_RodControlScotopic_run04' ...
            '\n11 - Melanopsin_RodControlScotopic_run05' ...
            '\n12 - Scale Melanopsin_RodControlScotopic_run06' ...
            '\n13 - Scale Calibration' ...
            '\n0 - Tracking Preview' ...
            ]);
        runNum = input('\nWhich run number? \n');
        
        switch runNum
            case 13 % scale calibration
                disp ('Press spacebar when ready to calibrate.')
                pause;
                scaleDiams = GetWithDefault('Enter pupil diameters on calibration stick you want to test. Use square brackets for multiple ones.', 5);
                recTime = runSecs{runNum};
                ScaleCal = LiveTrack_ScaleCalibration(scaleDiams, recTime, outDir);
                save(fullfile(outDir, [subjName '_' sessDate 'ScaleCal']), 'ScaleCal')
                
                
                
        end
    case {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
        recTime = runSecs{runNum};
        if runNum <= 6
            savePath = outDir;
        else
            savePath = outDir;
        end
        saveName = runNames{runNum};
        % check if files with this name already exist
        Files= { ...
            '_report.mat' ...
            '_track.mp4' ...
            '_track.mov'...
            '_raw.mov' ...
            };
        for ff =1:length(Files)
            if exist (fullfile(savePath, [saveName Files{ff}]), 'file')
                if ~exist (fullfile(savePath, 'Aborted_runs'), 'dir')
                    mkdir (fullfile(savePath, 'Aborted_runs'))
                end
                if exist (fullfile(savePath, 'Aborted_runs', [saveName Files{ff} '_ABORTED_01']), 'file') && ...
                        exist (fullfile(savePath, 'Aborted_runs', [saveName Files{ff} '_ABORTED_02']), 'file')
                    copyfile (fullfile(savePath, [saveName Files{ff}]), fullfile(savePath, 'Aborted_runs', [saveName Files{ff} '_ABORTED_03']));
                elseif exist (fullfile(savePath, 'Aborted_runs', [saveName Files{ff} '_ABORTED_01']), 'file') && ...
                        ~exist (fullfile(savePath, 'Aborted_runs', [saveName Files{ff} '_ABORTED_02']), 'file')
                    copyfile (fullfile(savePath, [saveName Files{ff}]), fullfile(savePath, 'Aborted_runs', [saveName Files{ff} '_ABORTED_02']));
                elseif ~exist (fullfile(savePath, 'Aborted_runs', [saveName Files{ff} '_ABORTED_01']), 'file')
                    copyfile (fullfile(savePath, [saveName Files{ff}]), fullfile(savePath, 'Aborted_runs', [saveName Files{ff} '_ABORTED_01']));
                elseif exist (fullfile(savePath, 'Aborted_runs', [saveName Files{ff} '_ABORTED_01']), 'file') && ...
                        exist (fullfile(savePath, 'Aborted_runs', [saveName Files{ff} '_ABORTED_02']), 'file') && ...
                        exist (fullfile(savePath, 'Aborted_runs', [saveName Files{ff} '_ABORTED_03']), 'file')
                    saveNum = GetWithDefault('Insert progressive save number for this aborted run', '04');
                    copyfile (fullfile(savePath, [saveName Files{ff}]), fullfile(savePath, 'Aborted_runs', [saveName Files{ff} '_ABORTED_' saveNum]));
                end
            end
        end
        if QuickTime
            % to save the LiveTrack Video with QuickTime, use this section
            showTTL = false;
            TrackVidName = [saveName '_track'];
            RawVidName = [saveName '_raw'];
            postBufferTime = 5;
            fprintf ('Press spacebar to start recording\n');
            pause;
            system(sprintf('sh /Users/Shared/Matlab/gkaguirrelab/LiveTrackfMRIToolbox/AcquisitionTools/QT_recShell.sh %s %s %s &' , savePath, TrackVidName, num2str(recTime+postBufferTime)));
            system(sprintf('osascript /Users/Shared/Matlab/gkaguirrelab/LiveTrackfMRIToolbox/AcquisitionTools/RawVideoRec.scpt %s %s %s', savePath, RawVidName, num2str(recTime+postBufferTime)));
            LiveTrack_GetReportOnly (showTTL,recTime,savePath,saveName)
        else
            % to save the LiveTrack Video WITHIN MATLAB, use this sectionion
            TTLtrigger = false;
            GetRawVideo = true;
            [Report] = LiveTrack_GetReportVideo (TTLtrigger,GetRawVideo,recTime,savePath,saveName);
            % give some information about the recording
            [TTLPulses] = CountTTLPulses (Report);
            fprintf ('\n>>>> Recorded %d TTL pulses.\n', TTLPulses);
            [trackedSamples,trackedPct] = CountTrackedSamples (Report);
            fprintf ('\n>>>> Pupil was tracked in %.2f percent of the samples.\n',trackedPct);
        end
        
    case 0 % show preview within Matlab
        LiveTrack_Preview;
    otherwise
        error ('not available run number!')
end
